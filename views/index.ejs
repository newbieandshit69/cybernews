<html>
<head>
  <title>CYBERNEWS</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      margin: 0;
      background: #f4f4f4;
      color: #333;
    }
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }
    h1 {
      font-size: 2.5em;
      text-align: center;
      margin-bottom: 20px;
      color: #1a1a1a;
    }
    .rss-section {
      background: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      margin-bottom: 30px;
    }
    .rss-form {
      display: flex;
      gap: 10px;
      justify-content: center;
      margin-bottom: 20px;
    }
    .rss-form input {
      width: 400px;
      padding: 12px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 1em;
      transition: border-color 0.3s;
    }
    .rss-form input:focus {
      border-color: #007bff;
      outline: none;
    }
    .rss-form button {
      background: #007bff;
      color: white;
      border: none;
      padding: 12px 24px;
      border-radius: 4px;
      cursor: pointer;
      font-size: 1em;
      transition: background 0.3s;
    }
    .rss-form button:hover {
      background: #0056b3;
    }
    .rss-list h3 {
      font-size: 1.5em;
      margin: 0 0 10px;
      color: #1a1a1a;
    }
    .rss-list .feed-count {
      font-size: 0.9em;
      color: #555;
      margin-bottom: 15px;
    }
    .rss-list ul {
      list-style: none;
      padding: 0;
      display: grid;
      gap: 10px;
    }
    .rss-list li {
      background: #f9f9f9;
      padding: 12px;
      border-radius: 6px;
      display: flex;
      align-items: center;
      transition: transform 0.3s;
    }
    .rss-list li:hover {
      transform: translateY(-2px);
    }
    .rss-list li span {
      flex-grow: 1;
      font-size: 0.95em;
      word-break: break-all;
    }
    .delete-button {
      background: none;
      border: none;
      color: #dc3545;
      font-size: 1.2em;
      cursor: pointer;
      padding: 5px;
      transition: color 0.3s;
    }
    .delete-button:hover {
      color: #b02a37;
    }
    .no-feeds {
      color: #dc3545;
      font-style: italic;
      text-align: center;
      font-size: 1.1em;
    }
    .refresh-button {
      display: block;
      background: #28a745;
      color: white;
      padding: 12px 24px;
      border-radius: 4px;
      text-decoration: none;
      font-size: 1em;
      margin: 20px auto;
      text-align: center;
      width: fit-content;
      transition: background 0.3s;
    }
    .refresh-button:hover {
      background: #218838;
    }
    .loading {
      text-align: center;
      font-size: 1.5em;
      margin: 50px 0;
    }
    .loading::after {
      content: '';
      display: inline-block;
      width: 20px;
      height: 20px;
      border: 3px solid #007bff;
      border-top: 3px solid transparent;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin-left: 10px;
    }
    .news-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
      margin-top: 20px;
    }
    .news-card {
      background: white;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      padding: 20px;
      transition: transform 0.3s, box-shadow 0.3s;
    }
    .news-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    .news-card h2 {
      font-size: 1.5em;
      margin: 0 0 10px;
    }
    .news-card h2 a {
      color: #1a1a1a;
      text-decoration: none;
    }
    .news-card h2 a:hover {
      text-decoration: underline;
    }
    .news-card p {
      margin: 5px 0;
      font-size: 0.9em;
      color: #555;
    }
    .news-card p.content {
      color: #333;
      line-height: 1.5;
    }
    .error {
      text-align: center;
      color: #dc3545;
      font-size: 1.5em;
      margin: 50px 0;
    }
    .hidden {
      display: none;
    }
    @keyframes spin {
      to { transform: rotate(360deg); }
    }
    @media (max-width: 600px) {
      .container { padding: 10px; }
      h1 { font-size: 2em; }
      .rss-form { flex-direction: column; }
      .rss-form input { width: 100%; }
      .rss-form button { width: 100%; }
      .news-grid { grid-template-columns: 1fr; }
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>News Hub</h1>
    
    <!-- RSS feed management -->
    <div class="rss-section">
      <form action="/add-rss" method="post" class="rss-form">
        <input type="text" name="rssUrls" placeholder="Enter an RSS feed URL">
        <button type="submit">Add Feed</button>
      </form>
      <div class="rss-list">
        <h3>Manage Feeds</h3>
        <p class="feed-count"><%= rssUrls.length %> feed<%= rssUrls.length == 1 ? '' : 's' %></p>
        <% if (rssUrls.length == 0) { %>
          <p class="no-feeds">No feeds added yet! Enter a URL above to start.</p>
        <% } else { %>
          <ul>
            <% for (let i = 0; i < rssUrls.length; i++) { %>
              <li>
                <span><%= rssUrls[i] %></span>
                <form action="/delete-rss" method="post" style="display: inline;">
                  <input type="hidden" name="url" value="<%= rssUrls[i] %>">
                  <button type="submit" class="delete-button">âœ•</button>
                </form>
              </li>
            <% } %>
          </ul>
        <% } %>
      </div>
    </div>
    
    <!-- Refresh button -->
    <a href="/refresh" class="refresh-button">Refresh News</a>
    
    <!-- News display -->
    <div id="loading" class="loading">Loading news...</div>
    <div id="error" class="error hidden">No error</div>
    <div id="news-container" class="news-grid hidden"></div>
  </div>
  
  <script>
    function loadNews() {
      let loading = document.getElementById('loading');
      let error = document.getElementById('error');
      let newsContainer = document.getElementById('news-container');
      
      fetch('/api/news')
        .then(response => {
          if (!response.ok) {
            throw new Error('Bad response: ' + response.status);
          }
          return response.json();
        })
        .then(news => {
          loading.classList.add('hidden');
          newsContainer.classList.remove('hidden');
          if (news.length == 0) {
            newsContainer.innerHTML = '<p>No news found</p>';
          } else {
            let html = '';
            for (let i = 0; i < news.length; i++) {
              let item = news[i];
              html += '<div class="news-card">' +
                '<h2><a href="' + item.link + '" target="_blank">' + item.title + '</a></h2>' +
                '<p><strong>Source:</strong> ' + item.src + '</p>' +
                '<p><strong>Date:</strong> ' + item.date + '</p>' +
                '<p class="content">' + item.content + '</p>' +
                '</div>';
            }
            newsContainer.innerHTML = html;
          }
        })
        .catch(err => {
          console.log('Fetch error: ' + err.message);
          loading.classList.add('hidden');
          error.classList.remove('hidden');
          error.innerText = 'Error loading news: ' + err.message;
        });
    }
    window.onload = loadNews;
  </script>
</body>
</html>